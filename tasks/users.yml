---
- name: Add standard groups
  group:
    name: "{{ item.name }}"
    state: present
    gid: "{{ item.gid|default(omit) }}"
    system: "{{ item.system|default(omit) }}"
  loop: "{{ bootstrap_groups|default([]) }}"

- name: Remove groups
  group:
    name: "{{ item }}"
    state: absent
  with_items: "{{ bootstrap_groups_remove|default([]) }}"

- name: Add users
  user:
    name: "{{ item.name }}"
    comment: "{{ item.comment }}"
    shell: "{{ item.shell|default(omit) }}"
    password: "{{ item.password|default(omit) }}"
    groups: "{{ ','.join(item.groups|default([])) }}"
    state: present
    update_password: on_create
    create_home: "{{ item.create_home|default(omit) }}"
    home: "{{ item.home|default(omit) }}"
    system: "{{ item.system|default(omit) }}"
    generate_ssh_key: "{{ item.generate_ssh_key|default(omit) }}"
    ssh_key_bits: "{{ item.ssh_key_bits|default(4096) }}"
    ssh_key_comment: "{{ item.ssh_key_comment|default('') }}"
  loop: "{{ bootstrap_users|default([]) }}"
  loop_control:
    label: "{{ item.name }}"

- name: Allow passwordless sudo for sudo users
  lineinfile: "dest=/etc/sudoers
    state=present
    regexp='^{{ item }}'
    insertafter=EOF
    line='{{ item }} ALL=(ALL) NOPASSWD: ALL'"
  loop: "{{ bootstrap_sudo_users|default([]) }}"

- name: Add public SSH keys per user
  authorized_key:
    user: "{{ item.name }}"
    key: "{{ item.ssh_key }}"
  loop: "{{ bootstrap_users|default([]) }}"
  loop_control:
    label: "{{ item.name }}"
  when: item.ssh_key is defined

- name: Install git repos per user
  git:
    repo: "{{ item[1].src }}"
    dest: "{{ item[1].dest }}"
    depth: 1
    accept_hostkey: yes
    version: "{{ item[1].version }}"
  become_user: "{{ item[0].name }}"
  become: yes
  loop: "{{ lookup('subelements', bootstrap_users, 'repos', {'skip_missing': True}, wantlist=True) }}"
  loop_control:
    label: "{{ item[1].src }}"

- name: Set correct ownership for personal git repos
  file:
    name: "{{ item[1].dest }}"
    owner: "{{ item[0].name }}"
    group: "{{ item[0].name }}"
    recurse: yes
  loop: "{{ lookup('subelements', bootstrap_users, 'repos', {'skip_missing': True}, wantlist=True) }}"
  loop_control:
    label: "{{ item[1].dest }}"

- name: Execute installers for users
  command: "{{ item[1].command }}"
  become: yes
  become_user: "{{ item[0].name }}"
  loop: "{{ lookup('subelements', bootstrap_users, 'installers', {'skip_missing': True}, wantlist=True) }}"
  loop_control:
    label: "{{ item[1].command }}"
