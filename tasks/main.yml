---
# tasks file for bootstrap
- include: packages.yml
  tags: packages

# Weirdly enough this sometimes necessitates a reboot
- name: Set hostname
  hostname: name="{{ hostname|default("bootstrapped") }}"
  tags:
    - hostname

- name: Find out kernel version
  command: uname -r
  register: kernel_running
  changed_when: false
  tags:
    - experimental

- name: Check if the most recent kernel is running
  shell: echo $(readlink -f /vmlinuz) | sed -e "s/\/boot\/vmlinuz-//"
  register: kernel_booting
  changed_when: false
  tags:
    - experimental

- name: Check if github.com can be resolved
  command: getent hosts github.com
  register: resolved
  ignore_errors: yes
  changed_when: resolved.rc
  tags:
    - experimental

- name: Reboot if required
  reboot:
  when: bootstrap_reboot_allowed and ((kernel_running.stdout != kernel_booting.stdout) or resolved.rc != 0)
  tags:
    - experimental

- name: Set locale (needs locale package)
  locale_gen:
    name: "{{ bootstrap_locale|default('en_US.UTF-8') }}"
    state: present
  ignore_errors: yes

- name: Add standard groups
  group:
    name: "{{ item }}"
    state: present
  loop: "{{ bootstrap_groups|default([]) }}"
  tags:
    - usermanagement

- name: Remove groups
  group: name={{ item }}
    state=absent
  with_items: "{{ bootstrap_groups_remove|default([]) }}"
  tags:
    - usermanagement

- name: Add users
  user: name={{ item.name }}
    comment="{{ item.comment }}"
    shell="{{ item.shell|default('/bin/bash') }}"
    password="{{ item.password|default([]) }}"
    groups={{ ",".join(item.groups) }}
    state=present
    update_password=on_create
  loop: "{{ bootstrap_users|default([]) }}"
  tags:
    - usermanagement

- name: Install common git repositories
  git:
    repo: "{{ item.repo }}"
    dest: "{{ item.dest }}"
    depth: "{{ item.depth|default('1') }}"
    accept_hostkey: yes
    version: "{{ item.version|default('master') }}"
    force: "{{ item.force|default('no') }}"
  with_items:
    - "{{ bootstrap_git_repositories|default([]) }}"
  # local modifications allowed
  ignore_errors: yes

- include: files.yml
  tags: files

- name: Apply / deploy common templates
  template: src={{ item.src }}
    dest={{ item.dest }}
    mode={{ item.mode }}
  with_items:
    - "{{ bootstrap_templates|default([]) }}"
  tags:
    - templates

- name: Allow ssh through firewall
  ufw: rule=allow proto=tcp port={{ item }}
  notify:
    - Reload ufw
  tags:
    - ssh
  with_items: '{{ bootstrap_ufw_tcp_allow|default(["22"]) }}'

- name: Make sure firewall is up and running, and denying
  ufw:
    state: enabled
    policy: deny
    direction: incoming
  notify:
    - Reload ufw
  tags:
    - ssh

- name: Remove insufficient moduli settings
  lineinfile: dest=/etc/ssh/moduli
    regexp=" {{ item }} "
    line="{{ item }}"
    state=absent
  with_items: "{{ sshd_moduli_remove|default([]) }}"
  notify:
    - Restart sshd
  tags:
    - ssh

- name: Allow passwordless sudo for sudo users
  lineinfile: "dest=/etc/sudoers
    state=present
    regexp='^{{ item }}'
    insertafter=EOF
    line='{{ item }} ALL=(ALL) NOPASSWD: ALL'"
  with_items: "{{ bootstrap_sudo_users|default([]) }}"
  tags:
    - usermanagement

- name: Add public SSH keys per user
  authorized_key: user={{ item.name }}
    key="{{ item.ssh_key }}"
  with_items: "{{ bootstrap_users|default([]) }}"
  tags:
    - usermanagement

- name: Install git repos per user
  git: repo={{ item[1].src }}
    dest={{ item[1].dest }}
    depth=1
    accept_hostkey=yes
    version={{ item[1].version }}
  become_user: "{{ item[0].name }}"
  become: yes
  with_subelements:
    - "{{ bootstrap_users|default([]) }}"
    - repos
  tags:
    - usermanagement

- name: Set correct ownership for personal git repos
  file: name={{ item[1].dest }}
    owner={{ item[0].name }}
    group={{ item[0].name }}
    recurse=yes
  with_subelements:
    - "{{ bootstrap_users|default([]) }}"
    - repos
  tags:
    - usermanagement

- name: Execute installers for users
  command: "{{ item[1].command }}"
  become: yes
  become_user: "{{ item[0].name }}"
  with_subelements:
    - "{{ bootstrap_users|default([]) }}"
    - installers
  tags:
    - usermanagement

- name: Disable grub timeout
  lineinfile: dest=/etc/default/grub
    regexp="^{{ item.name }}="
    line="{{ item.name }}={{ item.value }}"
    state=present
  with_items: "{{ grub_settings|default([]) }}"
  notify: Reload grub config
  tags:
    - grub

- include: timezone.yml
  tags: timezone

- include: mounts.yml
  tags: mounts

- name: Run post-provision commands
  command: "{{ item }}"
  loop: "{{ bootstrap_commands|default([]) }}"
  tags:
    - commands
